rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ====================================================================
    // USERS COLLECTION (LEGENDARY UPGRADE)
    // ====================================================================
    match /users/{userId} {
      // READ rules are still perfect, no changes here.
      allow get: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && 'admin' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;

      // -- NEW, SMARTER WRITE RULES --

      // Who can CREATE new users? Only admins. (Or backend functions).
      allow create: if request.auth != null && 'admin' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;

      // Who can UPDATE a user's profile?
      allow update: if
          // Path 1: The user making the request is an admin.
          (request.auth != null && 'admin' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role) ||
          // OR Path 2: The user is updating their OWN profile...
          (request.auth != null && request.auth.uid == userId &&
          // ...AND they are NOT trying to change sensitive fields like their role.
          request.resource.data.role == resource.data.role);

      // Who can DELETE users? Only admins.
      allow delete: if request.auth != null && 'admin' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // ====================================================================
    // ANNOUNCEMENTS COLLECTION (Your rule is already perfect)
    // ====================================================================
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if request.auth != null &&
                      'admin' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // ====================================================================
    // FEEDBACKS COLLECTION (Unchanged)
    // ====================================================================
    match /feedbacks/{feedbackId} {
      allow read: if false; // Admins should probably read this from a secure backend function
      allow create: if request.auth != null &&
                       request.resource.data.name is string &&
                       request.resource.data.name.size() < 100 &&
                       request.resource.data.message is string &&
                       request.resource.data.message.size() < 1000 &&
                       request.resource.data.rating is number &&
                       request.resource.data.rating >= 1 &&
                       request.resource.data.rating <= 5;
      allow update, delete: if false;
    }

    // ====================================================================
    // SECURITY TOKENS COLLECTION (Unchanged)
    // ====================================================================
    match /security_tokens/{docId} {
      allow read, write: if false;
    }
  }
}